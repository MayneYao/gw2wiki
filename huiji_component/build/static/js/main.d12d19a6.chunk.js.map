{"version":3,"sources":["serviceWorker.js","components/ItemCard.js","components/Dialog.js","components/ItemLine.js","index.js"],"names":["Boolean","window","location","hostname","match","withStyles","card","maxWidth","media","height","width","float","name","Junk","color","Basic","Fine","Masterwork","Rare","Exotic","Ascended","Legendary","props","classes","_props$data","data","icon","name_en","description","rarity","react_default","a","createElement","CardContent_default","className","src","title","Typography_default","gutterBottom","variant","component","AlertDialog","Dialog_default","open","this","onClose","handleClose","aria-labelledby","aria-describedby","DialogContent_default","components_ItemCard","React","Component","ItemCard","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClickOpen","setState","state","_this$props","_this$props$data","onClick","concat","components_Dialog","lineHeight","all_item_div","document","querySelectorAll","all_item_id","_step","_iterator","Symbol","iterator","_iteratorNormalCompletion","next","done","item","value","push","parseInt","dataset","itemId","console","log","axios","get","params","filter","JSON","stringify","id","$in","then","res","_embedded","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","undefined","_step2","_loop","itemData","find","dItem","ReactDOM","render","ItemLine","_iterator2","err","return","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d12d19a6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n\tcard: {\n\t\tmaxWidth: 345,\n\t},\n\tmedia: {\n\t\theight: 64,\n\t\twidth: 64,\n\t\tfloat: 'left'\n\t},\n\tname: {\n\t\tfloat: 'right',\n\t\twidth: '70%'\n\t},\n\tJunk: {\n\t\tcolor: '#aaa'\n\t},\n\n\tBasic: {\n\t\tcolor: '#000'\n\t},\n\n\tFine: {\n\t\tcolor: '#62a4da'\n\t},\n\n\tMasterwork: {\n\t\tcolor: '#1a9306'\n\t},\n\n\tRare: {\n\t\tcolor: '#fcd00b'\n\t},\n\n\tExotic: {\n\t\tcolor: '#ffa405'\n\t},\n\n\tAscended: {\n\t\tcolor: '#fb3e8d'\n\t},\n\n\tLegendary: {\n\t\tcolor: '#4c139d'\n\t}\n};\n\nfunction MediaCard(props) {\n\tconst {\n\t\tclasses, data: {\n\t\t\ticon, name, name_en, description, rarity\n\t\t}\n\t} = props;\n\treturn (\n\n\t\t<CardContent>\n\t\t\t<img\n\t\t\t\tclassName={classes.media}\n\t\t\t\tsrc={icon}\n\t\t\t\ttitle={name}\n\t\t\t/>\n\t\t\t<div className={classes.name}>\n\t\t\t\t<Typography gutterBottom variant=\"h6\" component=\"h6\" className={classes[rarity]}>\n\t\t\t\t\t{name}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography gutterBottom variant=\"h6\" component=\"h6\" className={classes[rarity]}>\n\t\t\t\t\t{name_en}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography component=\"p\">\n\t\t\t\t\t{description}\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t</CardContent>\n\n\t);\n}\n\nMediaCard.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MediaCard);","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport ItemCard from './ItemCard';\n\nclass AlertDialog extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Dialog\n\t\t\t\t\topen={this.props.open}\n\t\t\t\t\tonClose={this.props.handleClose}\n\t\t\t\t\taria-labelledby=\"alert-dialog-title\"\n\t\t\t\t\taria-describedby=\"alert-dialog-description\"\n\t\t\t\t>\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<ItemCard data={this.props.data}/>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default AlertDialog;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport Dialog from './Dialog';\n\nconst styles = {\n\tmedia: {\n\t\theight: 18,\n\t\twidth: 18,\n\t\tfloat: 'left'\n\t},\n\tname: {\n\t\tlineHeight: '18px'\n\t},\n\tJunk: {\n\t\tcolor: '#aaa'\n\t},\n\n\tBasic: {\n\t\tcolor: '#000'\n\t},\n\n\tFine: {\n\t\tcolor: '#62a4da'\n\t},\n\n\tMasterwork: {\n\t\tcolor: '#1a9306'\n\t},\n\n\tRare: {\n\t\tcolor: '#fcd00b'\n\t},\n\n\tExotic: {\n\t\tcolor: '#ffa405'\n\t},\n\n\tAscended: {\n\t\tcolor: '#fb3e8d'\n\t},\n\n\tLegendary: {\n\t\tcolor: '#4c139d'\n\t}\n};\n\nclass ItemCard extends React.Component {\n\n\thandleClickOpen = () => {\n\t\tthis.setState({open: true});\n\t};\n\n\thandleClose = () => {\n\t\tthis.setState({open: false});\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\topen: false\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tclasses, data: {\n\t\t\t\ticon, name, rarity\n\t\t\t}\n\t\t} = this.props;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div onClick={this.handleClickOpen}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName={classes.media}\n\t\t\t\t\t\tsrc={icon}\n\t\t\t\t\t\ttitle={name}\n\t\t\t\t\t/>\n\t\t\t\t\t<p className={`${classes[rarity]} ${classes.name}`}>\n\t\t\t\t\t\t{name}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<Dialog\n\t\t\t\t\topen={this.state.open}\n\t\t\t\t\thandleClose={this.handleClose}\n\t\t\t\t\tdata={this.props.data}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t);\n\t}\n}\n\nItemCard.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ItemCard);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Gw2Item from './components/ItemLine';\nimport axios from 'axios';\n\nconst apiBaseUrl = 'https://gw2.huijiwiki.com/api/rest_v1/namespace/data';\n\nlet all_item_div = document.querySelectorAll('div[data-item-id]');\n\nlet all_item_id = [];\n\nfor (let item of all_item_div) {\n\tall_item_id.push(parseInt(item.dataset.itemId))\n}\nconsole.log(all_item_id);\naxios.get(apiBaseUrl, {\n\tparams: {\n\t\tfilter: JSON.stringify({id: {\"$in\": all_item_id}})\n\t}\n}).then(res => {\n\tconst {_embedded} = res.data;\n\tfor (let item of all_item_div) {\n\t\tlet itemData = _embedded.find(dItem => dItem.id == item.dataset.itemId);\n\t\tReactDOM.render(<Gw2Item data={itemData}/>, item);\n\t}\n});\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}